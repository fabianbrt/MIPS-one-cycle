----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date: 03/24/2025 03:18:59 PM
-- Design Name: 
-- Module Name: IFETCH - Behavioral
-- Project Name: 
-- Target Devices: 
-- Tool Versions: 
-- Description: 
-- 
-- Dependencies: 
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
-- 
----------------------------------------------------------------------------------


library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity IFETCH is
    Port ( clk : in STD_LOGIC;
           rst : in STD_LOGIC;
           en : in std_logic;
           a : in STD_LOGIC_VECTOR (3 downto 0);
           b : in STD_LOGIC_VECTOR (3 downto 0);
           sw : in STD_LOGIC_VECTOR (1 downto 0);
           instruction : out STD_LOGIC;
           PCinc : out STD_LOGIC);
end IFETCH;

architecture Behavioral of IFETCH is

type rom_type is array(0 to 255) of std_logic_vector(31 downto 0);
signal pcnt: std_logic_vector(3 downto 0) := (others => '0');
signal ROM: rom_type := (
    B"100011_00000_01000_0000000000000000", -- X"2080" -- LW $1, offset1($0) -- no_digits       - 1
    B"000000_00000_00001_00010_00001_000010", -- X"2101" -- SRL $2, $1, h=1  -- HALF            - 2
    B"001000_00000_00000_0000000000000001", -- X"2180" -- ADDI $0, $0, imm=1 -- index           - 3
    B"100011_00000_00011_0000000000000000", -- X"2201" -- LW $3, offset($0)                     - 4
    B"000000_00011_00000_00100_00000_100010", -- X"6C80" -- SUB $4, $1, $0   -- no_digits - i   - 5
    B"100011_00100_00101_0000000000000001", -- X"7100" -- LW $5, $4, offset=1                   - 6
    B"000101_00011_00101_0000000000000000", -- X"4C80" -- BNE $3, $5, offset =?                 - 7
    B"001000_00000_00000_0000000000000001", -- X"5100" --  ADDI $0, $0, imm=1                   - 8
    B"000101_00000_00010_1111111111111011", -- X"0550" -- BNE $0, $2, offset=-5                 - 9
    B"001000_00001_00110_0000000000000001", -- ADDI $6, $1, imm=1 -- no_digits + 1
    B"001000_00111_00111_0000000000000001", -- ADDI $7, $7, imm=1 -- = 1 => TRUE
    B"101011_00110_00111_0000000000000000", --  SW $7, offset($6)
    --JUMP END
    B"001000_00001_00110_0000000000000001", -- ADDI $6, $1, imm=1 -- no_digits + 1
    B"001000_00111_00111_0000000000000010", -- ADDI $7, $7, imm=1 -- = 2 => FALSE
    B"101011_00110_00111_0000000000000000", --  SW $7, offset($6)
    --END :
    
    others => X"0000" -- NoOp(ADD $0, $0, $0)                                                   - 10
    
);
begin
process(clk)
    begin
        if rising_edge(clk) and en='1' then
            pcnt <= pcnt + 1;
        end if;
end process;
    

end Behavioral;
