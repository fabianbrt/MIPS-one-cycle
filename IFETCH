----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date: 03/24/2025 03:18:59 PM
-- Design Name: 
-- Module Name: IFETCH - Behavioral
-- Project Name: 
-- Target Devices: 
-- Tool Versions: 
-- Description: 
-- 
-- Dependencies: 
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
-- 
----------------------------------------------------------------------------------


library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity IFETCH is
    Port ( clk : in STD_LOGIC;
           rst : in STD_LOGIC;
           en : in std_logic);
           a : in STD_LOGIC_VECTOR (3 downto 0);
           b : in STD_LOGIC_VECTOR (3 downto 0);
           sw : in STD_LOGIC_VECTOR (1 downto 0);
           instruction : out STD_LOGIC;
           PCinc : out STD_LOGIC);
end IFETCH;

architecture Behavioral of IFETCH is
type rom_type is array(0 to 255) of std_logic_vector(31 downto 0);
signal pcnt: std_logic_vector(3 downto 0) := (others => '0');
signal ROM: rom_type := (
    B"001_000_001_0000000", -- X"2080" -- ADDI $1, $0, $0 - 1
    B"001_000_010_0000001", -- X"2101" -- ADDI $2, $0, $1 - 2
    B"001_000_011_0000000", -- X"2180" -- ADDI $3, $0, $0 - 3
    B"001_000_100_0000001", -- X"2201" -- ADDI $4, $0, $1 - 4
    B"011_011_001_0000000", -- X"6C80" -- SW $1 0($3)     - 5
    B"011_100_010_0000000", -- X"7100" -- SW $2, 0($4)    - 6
    B"010_011_001_0000000", -- X"4C80" -- LW $1, 0($3)    - 7
    B"010_100_010_0000000", -- X"5100" -- LW $2, 0($4)    - 8
    B"000_001_010_101_0_000", -- X"0550" -- ADD $5, $1, $2 - 9
    B"000_000_010_001_0_000", -- X"0110" -- ADD $1, $0, $2 - 10
    B"000_000_101_010_0_000", -- X"02A0" -- ADD $2, $0, $5 - 11
    B"111_0000000001000",  -- X"E008" -- j 8               - 12
    others => X"0000" -- NoOp(ADD $0, $0, $0)              - 13
    
);
begin
process(clk)
    begin
        if rising_edge(clk) and en='1' then
            pcnt <= pcnt + 1;
        end if;
end process;
    

end Behavioral;
